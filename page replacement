4. Optimal Page Replacement in C
A C program to simulate optimal page replacement.
Code:
#include &lt;stdio.h&gt;
int findOptimal(int pages[], int frame[], int n, int index, int frames) {
int farthest = index, pos = -1;
for (int i = 0; i &lt; frames; i++) {
int j;
for (j = index; j &lt; n; j++) {
if (frame[i] == pages[j]) {
if (j &gt; farthest) {
farthest = j;
pos = i;
}
break;
}
}
if (j == n) return i;
}
return (pos == -1) ? 0 : pos;
}
void optimalPageReplacement(int pages[], int n, int frames) {
int frame[frames], page_faults = 0;
for (int i = 0; i &lt; frames; i++)
frame[i] = -1;
for (int i = 0; i &lt; n; i++) {
int found = 0;
for (int j = 0; j &lt; frames; j++) {
if (frame[j] == pages[i]) {
found = 1;
break;

}
}
if (!found) {
int replaceIdx = (i &lt; frames) ? i : findOptimal(pages, frame, n,
i, frames);
frame[replaceIdx] = pages[i];
page_faults++;
}
printf(&quot;Step %d: &quot;, i + 1);
for (int j = 0; j &lt; frames; j++) {
if (frame[j] != -1)
printf(&quot;%d &quot;, frame[j]);
else
printf(&quot;- &quot;);
}
printf(&quot;\n&quot;);
}
printf(&quot;Total Page Faults: %d\n&quot;, page_faults);
}
int main() {
int pages[] = {1, 3, 0, 3, 5, 6, 3};
int n = sizeof(pages) / sizeof(pages[0]);
int frames = 3;
optimalPageReplacement(pages, n, frames);
return 0;
}

