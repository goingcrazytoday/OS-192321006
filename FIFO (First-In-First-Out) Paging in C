FIFO (First-In-First-Out) Paging in C

A C program to simulate FIFO page replacement.
Code:
#include &lt;stdio.h&gt;
void fifoPageReplacement(int pages[], int n, int frames) {
int queue[frames], front = 0, count = 0, page_faults = 0;
for (int i = 0; i &lt; frames; i++) {
queue[i] = -1; // Initialize queue with -1 (empty)
}
for (int i = 0; i &lt; n; i++) {
int found = 0;
// Check if page is already in frame
for (int j = 0; j &lt; frames; j++) {
if (queue[j] == pages[i]) {
found = 1;
break;
}
}
if (!found) {
queue[front] = pages[i]; // Replace oldest page
front = (front + 1) % frames;
page_faults++;
}
// Print current frame status
printf(&quot;Step %d: &quot;, i + 1);
for (int j = 0; j &lt; frames; j++) {
if (queue[j] != -1)
printf(&quot;%d &quot;, queue[j]);
else
printf(&quot;- &quot;);
}
printf(&quot;\n&quot;);
}
printf(&quot;Total Page Faults: %d\n&quot;, page_faults);
}
int main() {
int pages[] = {1, 3, 0, 3, 5, 6, 3};
int n = sizeof(pages) / sizeof(pages[0]);
int frames = 3;
fifoPageReplacement(pages, n, frames);
return 0;
}
Expected Output:
Step 1: 1 - -
Step 2: 1 3 -
Step 3: 1 3 0

Step 4: 1 3 0
Step 5: 3 0 5
Step 6: 0 5 6
Step 7: 5 6 3
Total Page Faults: 6
